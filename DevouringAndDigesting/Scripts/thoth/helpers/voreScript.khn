local __util = require 'larian.util'

function SwallowCheckEndo()
    local result = Ally()
    if not result.Result then
        local skillCheck = SkillCheck(Skill.Athletics,math.max(context.Target.GetPassiveSkill(Skill.Athletics),context.Target.GetPassiveSkill(Skill.Acrobatics)), IsSneakingOrInvisible())
        return ConditionResult(skillCheck.Result,{},{},skillCheck.Chance)
    end
    return result
end

function SwallowCheckLethal()
    local result = Ally()
    if not result.Result then
        local skillCheck = SkillCheck(Skill.Athletics,math.max(context.Target.GetPassiveSkill(Skill.Athletics),context.Target.GetPassiveSkill(Skill.Acrobatics)), IsSneakingOrInvisible())
        return ConditionResult(skillCheck.Result,{},{},skillCheck.Chance)
    end
    return result
end